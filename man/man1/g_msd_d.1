.TH g_msd_d 1 "Thu 16 Oct 2008"
.SH NAME
g_msd_d
.B VERSION 3.3.99_development_20071104
.SH SYNOPSIS
\f3g_msd_d\fP
.BI "-f" " traj.xtc "
.BI "-s" " topol.tpr "
.BI "-n" " index.ndx "
.BI "-o" " msd.xvg "
.BI "-mol" " diff_mol.xvg "
.BI "-[no]h" ""
.BI "-nice" " int "
.BI "-b" " time "
.BI "-e" " time "
.BI "-dt" " time "
.BI "-tu" " enum "
.BI "-[no]w" ""
.BI "-[no]xvgr" ""
.BI "-type" " enum "
.BI "-lateral" " enum "
.BI "-ngroup" " int "
.BI "-[no]mw" ""
.BI "-[no]rmcomm" ""
.BI "-trestart" " time "
.BI "-beginfit" " time "
.BI "-endfit" " time "
.SH DESCRIPTION
g_msd computes the mean square displacement (MSD) of atoms from
their initial positions. This provides an easy way to compute
the diffusion constant using the Einstein relation.
The time between additional starting points for the MSD calculation
is set with 
.B -trestart
.
The diffusion constant is calculated by least squares fitting a
straight line through the MSD from 
.B -beginfit
to

.B -endfit
. An error estimate given, which is the difference
of the diffusion coefficients obtained from fits over the two halfs
of the fit interval.


With option 
.B -rmcomm
center of mass motion can be removed.
For trajectories produced with GROMACS this is usually not necessary
as mdrun usually already removes the center of mass motion.
When you use this option be sure that the whole system is stored
in the trajectory file.


Option 
.B -mol
plots the MSD for molecules, this implies

.B -mw
, i.e. for each inidividual molecule an diffusion constant
is computed for its center of mass. When using an index file,
it should contain molecule numbers instead of atom numbers.
Using this option one also gets an accurate error estimate
based on the statistics between individual molecules. Since one usually
is interested in self-diffusion at infinite dilution this is probably
the most useful number.


.SH FILES
.BI "-f" " traj.xtc" 
.B Input
 Generic trajectory: xtc trr trj gro g96 pdb 

.BI "-s" " topol.tpr" 
.B Input
 Structure+mass(db): tpr tpb tpa gro g96 pdb xml 

.BI "-n" " index.ndx" 
.B Input, Opt.
 Index file 

.BI "-o" " msd.xvg" 
.B Output
 xvgr/xmgr file 

.BI "-mol" " diff_mol.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.SH OTHER OPTIONS
.BI "-[no]h"  "no    "
 Print help info and quit

.BI "-nice"  " int" " 19" 
 Set the nicelevel

.BI "-b"  " time" " 0     " 
 First frame (ps) to read from trajectory

.BI "-e"  " time" " 0     " 
 Last frame (ps) to read from trajectory

.BI "-dt"  " time" " 0     " 
 Only use frame when t MOD dt = first time (ps)

.BI "-tu"  " enum" " ps" 
 Time unit: 
.B ps
, 
.B fs
, 
.B ns
, 
.B us
, 
.B ms
or 
.B s


.BI "-[no]w"  "no    "
 View output xvg, xpm, eps and pdb files

.BI "-[no]xvgr"  "yes   "
 Add specific codes (legends etc.) in the output xvg files for the xmgrace program

.BI "-type"  " enum" " no" 
 Compute diffusion coefficient in one direction: 
.B no
, 
.B x
, 
.B y
or 
.B z


.BI "-lateral"  " enum" " no" 
 Calculate the lateral diffusion in a plane perpendicular to: 
.B no
, 
.B x
, 
.B y
or 
.B z


.BI "-ngroup"  " int" " 1" 
 Number of groups to calculate MSD for

.BI "-[no]mw"  "yes   "
 Mass weighted MSD

.BI "-[no]rmcomm"  "no    "
 Remove center of mass motion

.BI "-trestart"  " time" " 10    " 
 Time between restarting points in trajectory (ps)

.BI "-beginfit"  " time" " -1    " 
 Start time for fitting the MSD (ps), -1 is 10%

.BI "-endfit"  " time" " -1    " 
 End time for fitting the MSD (ps), -1 is 90%

