## Process this file with automake to produce Makefile.in
#
# Don't edit - this file is generated automatically from Makefile.am
#

templatedir = ${datadir}/template

# we don't build this, it's meant for the user to play with.
# Since a Makefile is used for the installation, we call the
# template makefile Template.mak, and rename it to Makefile when installing.
# We add the DOUBLE define to CPPFLAGS, so users can do without config.h
LDFLAGS = -L@libdir@ @LDFLAGS@
LIBS = -lmd@LIBSUFFIX@ -lgmx@LIBSUFFIX@ @LIBS@ 
CC = @CC@
if DOUBLE
MYCFLAGS = @CFLAGS@ @INCLUDES@ -I@includedir@ -DDOUBLE
else
MYCFLAGS = @CFLAGS@ @INCLUDES@ -I@includedir@
endif

if DOUBLE
template_DATA = template.c README Makefile.@host@_double
else
template_DATA = template.c README Makefile.@host@
endif
EXTRA_DIST = template.c README Template.mak

Makefile.@host@ Makefile.@host@_double: Template.mak Makefile 
	cat $(srcdir)/Template.mak | \
	sed 's,@LDFLAGS\@,$(LDFLAGS),' | \
	sed 's,@LIBS\@,$(LIBS),' | \
	sed 's,@CFLAGS\@,$(MYCFLAGS),' | \
	sed 's,@CC\@,$(CC),' | \
	sed 's,@host\@,@host@,' >$@

CLEANFILES = Makefile.@host@ Makefile.@host@_double *~ \\\#*




