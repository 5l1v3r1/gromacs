# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

#
# Don't edit - this file is generated automatically from Makefile.am
#


#
# Don't edit - this file is generated automatically from Makefile.am
#

# The asm suffix is for intel syntax assembly, and
# the s suffix for at & t syntax.
# S suffix files will be preprocessed by cpp, nasm
# on the other hand can do this directly.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AXP_ASM_OBJ = @AXP_ASM_OBJ@
BUILD_CC = @BUILD_CC@
CC = @CC@
CPP = @CPP@
F77 = @F77@
FLIBS = @FLIBS@
IDENT = @IDENT@
INNER_C_OBJ = @INNER_C_OBJ@
INNER_F77_OBJ = @INNER_F77_OBJ@
MAKEINFO = @MAKEINFO@
MOTIF_OBJ = @MOTIF_OBJ@
MPICC = @MPICC@
NASM = @NASM@
NASMFLAGS = @NASMFLAGS@
PACKAGE = @PACKAGE@
PAR_OBJ = @PAR_OBJ@
RANLIB = @RANLIB@
SSE_OBJ = @SSE_OBJ@
SUFFIX = @SUFFIX@
TDN_OBJ = @TDN_OBJ@
VERSION = @VERSION@
X86_ASM_OBJ = @X86_ASM_OBJ@
XDR_OBJ = @XDR_OBJ@
bindir = @bindir@
libdir = @libdir@

SUFFIXES = .asm .S .F

#################
# We need a second compile command producing executables 
# that can be run on the local host to make the innerloops.
# In most cases this is identical to the normal one, but not
# for cross-compilation. We also need it on parallel machines 
# where the MPI executables cannot be run outside a batch queue.

# This might be bad - but I don't know any other way to enable
# us to type make <progname> in subdirs right now
#AM_CPPFLAGS = -DHAVE_CONFIG_H

BUILD_COMPILE = $(BUILD_CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)

# 
# This is necessary for VPATH builds (and thus distcheck) to work, 
# but it can probably included in a nicer way...
INCLUDES = @INCLUDES@ -I$(top_srcdir)/src/include

# produce the gmx library
#

lib_LIBRARIES = libgmxXXX_SUFFIX_XXX.a

libgmxXXX_SUFFIX_XXX_a_SOURCES =  	3dview.c	atomprop.c	block_tx.c	bondfree.c		buffer.c	calcgrid.c	calch.c		inner.h			confio.c	copyrite.c	disre.c		do_fit.c		enxio.c		ewald_util.c	fatal.c		ffscanf.c		filenm.c	futil.c		gbutil.c	fnbf.c			gmxfio.c	ifunc.c		index.c		cinvsqrtdata.c		crecipdata.c    invblock.c	javaio.c	macros.c		main.c		maths.c		matio.c		memdump.c		mshift.c	mvdata.c	mvxvf.c		names.c			network.c	nrama.c		nrjac.c		nrnb.c			pargs.c		pbc.c		pdbio.c		princ.c			rando.c		random.c	rbin.c		rdgroup.c		readinp.c	replace.c	rmpbc.c		shift_util.c		sortwater.c	smalloc.c	stat.c		statutil.c		strdb.c		string2.c	symtab.c	tpxio.c			trnio.c		trxio.c		txtdump.c	typedefs.c		viewit.c	wgms.c		wman.c		writeps.c		xdrd.c		xtcio.c		xvgr.c   	replace.h		x86_cpu.c	


EXTRA_libgmxXXX_SUFFIX_XXX_a_SOURCES =  	mpiio.c		libnet.c	x86_3dnow.asm	f77_wrappers.c  	libxdrf.c	ftocstr.c	dumxdrf.c	mgmx.c			widget.c	widget.h	x86_cpuid.asm	axp_asm.S		x86_sse.asm	innerc.c	innerf.f

@USE_FORTRAN_TRUE@BUILT_SOURCES = innerf.f
@USE_FORTRAN_FALSE@BUILT_SOURCES = innerc.c

mpi_obj = mpiio.o
libnet_obj = libnet.o
inner_f77_obj = innerf.o	f77_wrappers.o
inner_c_obj = innerc.o  
xdr_obj = libxdrf.o ftocstr.o
noxdr_obj = dumxdrf.o
motif_obj = mgmx.o widget.o
x86_asm_obj = x86_cpuid.o
sse_obj = x86_sse.o
tdn_obj = x86_3dnow.o 
axp_asm_obj = axp_asm.o

libgmxXXX_SUFFIX_XXX_a_LIBADD =  	@PAR_OBJ@ 	@INNER_F77_OBJ@	@INNER_C_OBJ@		@AXP_ASM_OBJ@	@X86_ASM_OBJ@	@SSE_OBJ@		@TDN_OBJ@	@MOTIF_OBJ@	@XDR_OBJ@	


libgmxXXX_SUFFIX_XXX_a_DEPENDENCIES =  	@PAR_OBJ@ 	@INNER_F77_OBJ@	@INNER_C_OBJ@		@AXP_ASM_OBJ@	@X86_ASM_OBJ@	@SSE_OBJ@		@TDN_OBJ@	@MOTIF_OBJ@	@XDR_OBJ@	


noinst_PROGRAMS = mkinl

mkinl_SOURCES =  	mkinl.c			mkinl_declarations.c	mkinl_outerloop.c  	mkinl_innerloop.c	mkinl_calcdist.c	mkinl_invsqrt.c	   	mkinl_recip.c		mkinl_interactions.c	metacode.c	   	mkinl.h			mkinl_fortrandata.h


MKINL_OBJ =  		mkinl.o mkinl_declarations.o mkinl_outerloop.o mkinl_innerloop.o 		mkinl_calcdist.o mkinl_invsqrt.o mkinl_recip.o mkinl_interactions.o 		metacode.o


# clean things explicitly, since the target names might have changed
CLEANFILES = ${lib_LIBRARIES} *_d.a *_mpi.a *~ \\\#* innerc.c innerf.f
mkinstalldirs = $(SHELL) $(top_srcdir)/./config/mkinstalldirs
CONFIG_HEADER = ../../src/include/config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(lib_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I../../src/include
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
libgmxXXX_SUFFIX_XXX_a_OBJECTS =  3dview.o atomprop.o block_tx.o \
bondfree.o buffer.o calcgrid.o calch.o confio.o copyrite.o disre.o \
do_fit.o enxio.o ewald_util.o fatal.o ffscanf.o filenm.o futil.o \
gbutil.o fnbf.o gmxfio.o ifunc.o index.o cinvsqrtdata.o crecipdata.o \
invblock.o javaio.o macros.o main.o maths.o matio.o memdump.o mshift.o \
mvdata.o mvxvf.o names.o network.o nrama.o nrjac.o nrnb.o pargs.o pbc.o \
pdbio.o princ.o rando.o random.o rbin.o rdgroup.o readinp.o replace.o \
rmpbc.o shift_util.o sortwater.o smalloc.o stat.o statutil.o strdb.o \
string2.o symtab.o tpxio.o trnio.o trxio.o txtdump.o typedefs.o \
viewit.o wgms.o wman.o writeps.o xdrd.o xtcio.o xvgr.o x86_cpu.o
AR = ar
PROGRAMS =  $(noinst_PROGRAMS)

mkinl_OBJECTS =  mkinl.o mkinl_declarations.o mkinl_outerloop.o \
mkinl_innerloop.o mkinl_calcdist.o mkinl_invsqrt.o mkinl_recip.o \
mkinl_interactions.o metacode.o
mkinl_LDADD = $(LDADD)
mkinl_DEPENDENCIES = 
mkinl_LDFLAGS = 
FFLAGS = @FFLAGS@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
DEP_FILES =  .deps/3dview.P .deps/atomprop.P .deps/axp_asm.P \
.deps/block_tx.P .deps/bondfree.P .deps/buffer.P .deps/calcgrid.P \
.deps/calch.P .deps/cinvsqrtdata.P .deps/confio.P .deps/copyrite.P \
.deps/crecipdata.P .deps/disre.P .deps/do_fit.P .deps/dumxdrf.P \
.deps/enxio.P .deps/ewald_util.P .deps/f77_wrappers.P .deps/fatal.P \
.deps/ffscanf.P .deps/filenm.P .deps/fnbf.P .deps/ftocstr.P \
.deps/futil.P .deps/gbutil.P .deps/gmxfio.P .deps/ifunc.P .deps/index.P \
.deps/innerc.P .deps/innerf.P .deps/invblock.P .deps/javaio.P \
.deps/libnet.P .deps/libxdrf.P .deps/macros.P .deps/main.P \
.deps/maths.P .deps/matio.P .deps/memdump.P .deps/metacode.P \
.deps/mgmx.P .deps/mkinl.P .deps/mkinl_calcdist.P \
.deps/mkinl_declarations.P .deps/mkinl_innerloop.P \
.deps/mkinl_interactions.P .deps/mkinl_invsqrt.P \
.deps/mkinl_outerloop.P .deps/mkinl_recip.P .deps/mpiio.P \
.deps/mshift.P .deps/mvdata.P .deps/mvxvf.P .deps/names.P \
.deps/network.P .deps/nrama.P .deps/nrjac.P .deps/nrnb.P .deps/pargs.P \
.deps/pbc.P .deps/pdbio.P .deps/princ.P .deps/rando.P .deps/random.P \
.deps/rbin.P .deps/rdgroup.P .deps/readinp.P .deps/replace.P \
.deps/rmpbc.P .deps/shift_util.P .deps/smalloc.P .deps/sortwater.P \
.deps/stat.P .deps/statutil.P .deps/strdb.P .deps/string2.P \
.deps/symtab.P .deps/tpxio.P .deps/trnio.P .deps/trxio.P \
.deps/txtdump.P .deps/typedefs.P .deps/viewit.P .deps/wgms.P \
.deps/widget.P .deps/wman.P .deps/writeps.P .deps/x86_3dnow.P \
.deps/x86_cpu.P .deps/x86_cpuid.P .deps/x86_sse.P .deps/xdrd.P \
.deps/xtcio.P .deps/xvgr.P
SOURCES = $(libgmxXXX_SUFFIX_XXX_a_SOURCES) $(EXTRA_libgmxXXX_SUFFIX_XXX_a_SOURCES) $(mkinl_SOURCES)
OBJECTS = $(libgmxXXX_SUFFIX_XXX_a_OBJECTS) $(mkinl_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .F .S .asm .c .f .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(srcdir)/../Makefile.inc
	cd $(top_srcdir) && $(AUTOMAKE) --gnu src/gmxlib/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLIBRARIES:

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

distclean-libLIBRARIES:

maintainer-clean-libLIBRARIES:

install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LIBRARIES)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

libgmxXXX_SUFFIX_XXX.a: $(libgmxXXX_SUFFIX_XXX_a_OBJECTS) $(libgmxXXX_SUFFIX_XXX_a_DEPENDENCIES)
	-rm -f libgmxXXX_SUFFIX_XXX.a
	$(AR) cru libgmxXXX_SUFFIX_XXX.a $(libgmxXXX_SUFFIX_XXX_a_OBJECTS) $(libgmxXXX_SUFFIX_XXX_a_LIBADD)
	$(RANLIB) libgmxXXX_SUFFIX_XXX.a

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:
.f.o:
	$(F77COMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src/gmxlib

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu src/gmxlib/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLIBRARIES
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLIBRARIES
uninstall: uninstall-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-libLIBRARIES mostlyclean-compile \
		mostlyclean-noinstPROGRAMS mostlyclean-tags \
		mostlyclean-depend mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLIBRARIES clean-compile clean-noinstPROGRAMS \
		clean-tags clean-depend clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLIBRARIES distclean-compile \
		distclean-noinstPROGRAMS distclean-tags \
		distclean-depend distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLIBRARIES \
		maintainer-clean-compile \
		maintainer-clean-noinstPROGRAMS maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLIBRARIES distclean-libLIBRARIES \
clean-libLIBRARIES maintainer-clean-libLIBRARIES uninstall-libLIBRARIES \
install-libLIBRARIES mostlyclean-compile distclean-compile \
clean-compile maintainer-clean-compile mostlyclean-noinstPROGRAMS \
distclean-noinstPROGRAMS clean-noinstPROGRAMS \
maintainer-clean-noinstPROGRAMS tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir mostlyclean-depend \
distclean-depend clean-depend maintainer-clean-depend info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean

.asm.o:
	$(NASM) $(NASMFLAGS) $< -o $@
.S.s:
	$(CPP) $< > $@
.F.f:	
	$(CPP) $< > $@

# The inner loops
innerf.f:	mkinl 
		./mkinl	fortran	

innerc.c:	mkinl
		./mkinl c

metacode.o:	metacode.c
		$(BUILD_COMPILE) -c $(srcdir)/metacode.c
mkinl.o:	mkinl.c
		$(BUILD_COMPILE) -c $(srcdir)/mkinl.c
mkinl_declarations.o: mkinl_declarations.c
		$(BUILD_COMPILE) -c $(srcdir)/mkinl_declarations.c
mkinl_outerloop.o: mkinl_outerloop.c
		$(BUILD_COMPILE) -c $(srcdir)/mkinl_outerloop.c
mkinl_innerloop.o: mkinl_innerloop.c	
		$(BUILD_COMPILE) -c $(srcdir)/mkinl_innerloop.c
mkinl_calcdist.o: mkinl_calcdist.c	
		$(BUILD_COMPILE) -c $(srcdir)/mkinl_calcdist.c	
mkinl_invsqrt.o: mkinl_invsqrt.c
		$(BUILD_COMPILE) -c $(srcdir)/mkinl_invsqrt.c
mkinl_recip.o:	mkinl_recip.c
		$(BUILD_COMPILE) -c $(srcdir)/mkinl_recip.c
mkinl_interactions.o: mkinl_interactions.c
		$(BUILD_COMPILE) -c $(srcdir)/mkinl_interactions.c

mkinl:		$(MKINL_OBJ)
		$(BUILD_COMPILE) -o $@ $(MKINL_OBJ)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
