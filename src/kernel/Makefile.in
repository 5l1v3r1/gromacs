# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

#
# Don't edit - this file is generated automatically from Makefile.am
#


#
# Don't edit - this file is generated automatically from Makefile.am
#

# The asm suffix is for intel syntax assembly, and
# the s suffix for at & t syntax.
# S suffix files will be preprocessed by cpp, nasm
# on the other hand can do this directly.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AXP_ASM_OBJ = @AXP_ASM_OBJ@
BUILD_CC = @BUILD_CC@
CC = @CC@
CPP = @CPP@
F77 = @F77@
FLIBS = @FLIBS@
IDENT = @IDENT@
INNER_C_OBJ = @INNER_C_OBJ@
INNER_F77_OBJ = @INNER_F77_OBJ@
MAKEINFO = @MAKEINFO@
MOTIF_OBJ = @MOTIF_OBJ@
MPICC = @MPICC@
NASM = @NASM@
NASMFLAGS = @NASMFLAGS@
PACKAGE = @PACKAGE@
PAR_OBJ = @PAR_OBJ@
RANLIB = @RANLIB@
SSE_OBJ = @SSE_OBJ@
SUFFIX = @SUFFIX@
TDN_OBJ = @TDN_OBJ@
VERSION = @VERSION@
X86_ASM_OBJ = @X86_ASM_OBJ@
XDR_OBJ = @XDR_OBJ@
bindir = @bindir@
libdir = @libdir@

SUFFIXES = .asm .S .F

#################
# We need a second compile command producing executables 
# that can be run on the local host to make the innerloops.
# In most cases this is identical to the normal one, but not
# for cross-compilation. We also need it on parallel machines 
# where the MPI executables cannot be run outside a batch queue.

# This might be bad - but I don't know any other way to enable
# us to type make <progname> in subdirs right now
#AM_CPPFLAGS = -DHAVE_CONFIG_H

BUILD_COMPILE = $(BUILD_CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)

# This is necessary for VPATH to work, 
# but it can probably be done in a nicer way...
INCLUDES = @INCLUDES@ -I$(top_srcdir)/src/include
LDFLAGS = @LDFLAGS@ -L${top_builddir}/src/gmxlib -L${top_builddir}/src/mdlib
LDADD = -lmdXXX_SUFFIX_XXX -lgmxXXX_SUFFIX_XXX

bin_PROGRAMS =  	gromppXXX_SUFFIX_XXX		mdrunXXX_SUFFIX_XXX			tpbconvXXX_SUFFIX_XXX	  	pdb2gmxXXX_SUFFIX_XXX			protonateXXX_SUFFIX_XXX		nmrunXXX_SUFFIX_XXX	  		luckXXX_SUFFIX_XXX		gmxdumpXXX_SUFFIX_XXX			gmxcheckXXX_SUFFIX_XXX  	x2topXXX_SUFFIX_XXX				


gromppXXX_SUFFIX_XXX_SOURCES =  	topio.c 	toppush.c 	topcat.c 	topshake.c 		convparm.c 	tomorse.c	sorting.c 	splitter.c		dum_parm.c	readir.c  	add_par.c	topexcl.c		toputil.c	topdirs.c	grompp.c	add_par.h		splitter.h	topio.h		toputil.h	convparm.h		sorting.h	topdirs.h	toppush.h	dum_parm.h		readir.h	topcat.h	topexcl.h	topshake.h


mdrunXXX_SUFFIX_XXX_SOURCES =  	mdrun.c


tpbconvXXX_SUFFIX_XXX_SOURCES =  	readir.c	toputil.c	topdirs.c	add_par.c		topexcl.c	tpbconv.c	add_par.h	toputil.h		topdirs.h	readir.h	topexcl.h


pdb2gmxXXX_SUFFIX_XXX_SOURCES =  	hizzie.c	xlate.c		specbond.c	ter_db.c		h_db.c		genhydro.c     	pdb2top.c 	gen_ad.c 		gen_dum.c	pgutil.c	resall.c	hackblock.c		add_par.c	topexcl.c 	toputil.c	topdirs.c		pdb2gmx.c	gen_ad.h	add_par.h	h_db.h			pdb2top.h	resall.h	toputil.h	xlate.h			gen_dum.h	hackblock.h	pgutil.h	ter_db.h		topdirs.h	genhydro.h	hizzie.h	specbond.h		topexcl.h


protonateXXX_SUFFIX_XXX_SOURCES =  	hackblock.c	ter_db.c	h_db.c		genhydro.c		pgutil.c	resall.c	add_par.c	topexcl.c		toputil.c	topdirs.c	protonate.c	add_par.h		h_db.h		resall.h	toputil.h	hackblock.h		pgutil.h	ter_db.h	topdirs.h	topexcl.h


nmrunXXX_SUFFIX_XXX_SOURCES =  	nmrun.c


luckXXX_SUFFIX_XXX_SOURCES =  	luck.c


gmxdumpXXX_SUFFIX_XXX_SOURCES =  	gmxdump.c


gmxcheckXXX_SUFFIX_XXX_SOURCES =  	gmxcheck.c	tpbcmp.c	tpbcmp.h


x2topXXX_SUFFIX_XXX_SOURCES =  	toppush.c 	nm2type.c	pdb2top.c 	gen_ad.c 		gen_dum.c	pgutil.c	resall.c	hackblock.c		add_par.c	topexcl.c	toputil.c	topdirs.c		x2top.c		add_par.h	gen_ad.h	pdb2top.h		resall.h	toputil.h	gen_dum.h	hackblock.h		pgutil.h	topdirs.h	toppush.h	topexcl.h		x2top.h


# clean things explicitly, since the target names might have changed

CLEANFILES = ${bin_PROGRAMS}	${EXTRA_PROGRAMS}			*_mpi *_d *~ \\\#*

mkinstalldirs = $(SHELL) $(top_srcdir)/./config/mkinstalldirs
CONFIG_HEADER = ../../src/include/config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I../../src/include
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
gromppXXX_SUFFIX_XXX_OBJECTS =  topio.o toppush.o topcat.o topshake.o \
convparm.o tomorse.o sorting.o splitter.o dum_parm.o readir.o add_par.o \
topexcl.o toputil.o topdirs.o grompp.o
gromppXXX_SUFFIX_XXX_LDADD = $(LDADD)
gromppXXX_SUFFIX_XXX_DEPENDENCIES = 
gromppXXX_SUFFIX_XXX_LDFLAGS = 
mdrunXXX_SUFFIX_XXX_OBJECTS =  mdrun.o
mdrunXXX_SUFFIX_XXX_LDADD = $(LDADD)
mdrunXXX_SUFFIX_XXX_DEPENDENCIES = 
mdrunXXX_SUFFIX_XXX_LDFLAGS = 
tpbconvXXX_SUFFIX_XXX_OBJECTS =  readir.o toputil.o topdirs.o add_par.o \
topexcl.o tpbconv.o
tpbconvXXX_SUFFIX_XXX_LDADD = $(LDADD)
tpbconvXXX_SUFFIX_XXX_DEPENDENCIES = 
tpbconvXXX_SUFFIX_XXX_LDFLAGS = 
pdb2gmxXXX_SUFFIX_XXX_OBJECTS =  hizzie.o xlate.o specbond.o ter_db.o \
h_db.o genhydro.o pdb2top.o gen_ad.o gen_dum.o pgutil.o resall.o \
hackblock.o add_par.o topexcl.o toputil.o topdirs.o pdb2gmx.o
pdb2gmxXXX_SUFFIX_XXX_LDADD = $(LDADD)
pdb2gmxXXX_SUFFIX_XXX_DEPENDENCIES = 
pdb2gmxXXX_SUFFIX_XXX_LDFLAGS = 
protonateXXX_SUFFIX_XXX_OBJECTS =  hackblock.o ter_db.o h_db.o \
genhydro.o pgutil.o resall.o add_par.o topexcl.o toputil.o topdirs.o \
protonate.o
protonateXXX_SUFFIX_XXX_LDADD = $(LDADD)
protonateXXX_SUFFIX_XXX_DEPENDENCIES = 
protonateXXX_SUFFIX_XXX_LDFLAGS = 
nmrunXXX_SUFFIX_XXX_OBJECTS =  nmrun.o
nmrunXXX_SUFFIX_XXX_LDADD = $(LDADD)
nmrunXXX_SUFFIX_XXX_DEPENDENCIES = 
nmrunXXX_SUFFIX_XXX_LDFLAGS = 
luckXXX_SUFFIX_XXX_OBJECTS =  luck.o
luckXXX_SUFFIX_XXX_LDADD = $(LDADD)
luckXXX_SUFFIX_XXX_DEPENDENCIES = 
luckXXX_SUFFIX_XXX_LDFLAGS = 
gmxdumpXXX_SUFFIX_XXX_OBJECTS =  gmxdump.o
gmxdumpXXX_SUFFIX_XXX_LDADD = $(LDADD)
gmxdumpXXX_SUFFIX_XXX_DEPENDENCIES = 
gmxdumpXXX_SUFFIX_XXX_LDFLAGS = 
gmxcheckXXX_SUFFIX_XXX_OBJECTS =  gmxcheck.o tpbcmp.o
gmxcheckXXX_SUFFIX_XXX_LDADD = $(LDADD)
gmxcheckXXX_SUFFIX_XXX_DEPENDENCIES = 
gmxcheckXXX_SUFFIX_XXX_LDFLAGS = 
x2topXXX_SUFFIX_XXX_OBJECTS =  toppush.o nm2type.o pdb2top.o gen_ad.o \
gen_dum.o pgutil.o resall.o hackblock.o add_par.o topexcl.o toputil.o \
topdirs.o x2top.o
x2topXXX_SUFFIX_XXX_LDADD = $(LDADD)
x2topXXX_SUFFIX_XXX_DEPENDENCIES = 
x2topXXX_SUFFIX_XXX_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
DEP_FILES =  .deps/add_par.P .deps/convparm.P .deps/dum_parm.P \
.deps/gen_ad.P .deps/gen_dum.P .deps/genhydro.P .deps/gmxcheck.P \
.deps/gmxdump.P .deps/grompp.P .deps/h_db.P .deps/hackblock.P \
.deps/hizzie.P .deps/luck.P .deps/mdrun.P .deps/nm2type.P .deps/nmrun.P \
.deps/pdb2gmx.P .deps/pdb2top.P .deps/pgutil.P .deps/protonate.P \
.deps/readir.P .deps/resall.P .deps/sorting.P .deps/specbond.P \
.deps/splitter.P .deps/ter_db.P .deps/tomorse.P .deps/topcat.P \
.deps/topdirs.P .deps/topexcl.P .deps/topio.P .deps/toppush.P \
.deps/topshake.P .deps/toputil.P .deps/tpbcmp.P .deps/tpbconv.P \
.deps/x2top.P .deps/xlate.P
SOURCES = $(gromppXXX_SUFFIX_XXX_SOURCES) $(mdrunXXX_SUFFIX_XXX_SOURCES) $(tpbconvXXX_SUFFIX_XXX_SOURCES) $(pdb2gmxXXX_SUFFIX_XXX_SOURCES) $(protonateXXX_SUFFIX_XXX_SOURCES) $(nmrunXXX_SUFFIX_XXX_SOURCES) $(luckXXX_SUFFIX_XXX_SOURCES) $(gmxdumpXXX_SUFFIX_XXX_SOURCES) $(gmxcheckXXX_SUFFIX_XXX_SOURCES) $(x2topXXX_SUFFIX_XXX_SOURCES)
OBJECTS = $(gromppXXX_SUFFIX_XXX_OBJECTS) $(mdrunXXX_SUFFIX_XXX_OBJECTS) $(tpbconvXXX_SUFFIX_XXX_OBJECTS) $(pdb2gmxXXX_SUFFIX_XXX_OBJECTS) $(protonateXXX_SUFFIX_XXX_OBJECTS) $(nmrunXXX_SUFFIX_XXX_OBJECTS) $(luckXXX_SUFFIX_XXX_OBJECTS) $(gmxdumpXXX_SUFFIX_XXX_OBJECTS) $(gmxcheckXXX_SUFFIX_XXX_OBJECTS) $(x2topXXX_SUFFIX_XXX_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .F .S .asm .c .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(srcdir)/../Makefile.inc
	cd $(top_srcdir) && $(AUTOMAKE) --gnu src/kernel/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	     $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

gromppXXX_SUFFIX_XXX: $(gromppXXX_SUFFIX_XXX_OBJECTS) $(gromppXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f gromppXXX_SUFFIX_XXX
	$(LINK) $(gromppXXX_SUFFIX_XXX_LDFLAGS) $(gromppXXX_SUFFIX_XXX_OBJECTS) $(gromppXXX_SUFFIX_XXX_LDADD) $(LIBS)

mdrunXXX_SUFFIX_XXX: $(mdrunXXX_SUFFIX_XXX_OBJECTS) $(mdrunXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f mdrunXXX_SUFFIX_XXX
	$(LINK) $(mdrunXXX_SUFFIX_XXX_LDFLAGS) $(mdrunXXX_SUFFIX_XXX_OBJECTS) $(mdrunXXX_SUFFIX_XXX_LDADD) $(LIBS)

tpbconvXXX_SUFFIX_XXX: $(tpbconvXXX_SUFFIX_XXX_OBJECTS) $(tpbconvXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f tpbconvXXX_SUFFIX_XXX
	$(LINK) $(tpbconvXXX_SUFFIX_XXX_LDFLAGS) $(tpbconvXXX_SUFFIX_XXX_OBJECTS) $(tpbconvXXX_SUFFIX_XXX_LDADD) $(LIBS)

pdb2gmxXXX_SUFFIX_XXX: $(pdb2gmxXXX_SUFFIX_XXX_OBJECTS) $(pdb2gmxXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f pdb2gmxXXX_SUFFIX_XXX
	$(LINK) $(pdb2gmxXXX_SUFFIX_XXX_LDFLAGS) $(pdb2gmxXXX_SUFFIX_XXX_OBJECTS) $(pdb2gmxXXX_SUFFIX_XXX_LDADD) $(LIBS)

protonateXXX_SUFFIX_XXX: $(protonateXXX_SUFFIX_XXX_OBJECTS) $(protonateXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f protonateXXX_SUFFIX_XXX
	$(LINK) $(protonateXXX_SUFFIX_XXX_LDFLAGS) $(protonateXXX_SUFFIX_XXX_OBJECTS) $(protonateXXX_SUFFIX_XXX_LDADD) $(LIBS)

nmrunXXX_SUFFIX_XXX: $(nmrunXXX_SUFFIX_XXX_OBJECTS) $(nmrunXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f nmrunXXX_SUFFIX_XXX
	$(LINK) $(nmrunXXX_SUFFIX_XXX_LDFLAGS) $(nmrunXXX_SUFFIX_XXX_OBJECTS) $(nmrunXXX_SUFFIX_XXX_LDADD) $(LIBS)

luckXXX_SUFFIX_XXX: $(luckXXX_SUFFIX_XXX_OBJECTS) $(luckXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f luckXXX_SUFFIX_XXX
	$(LINK) $(luckXXX_SUFFIX_XXX_LDFLAGS) $(luckXXX_SUFFIX_XXX_OBJECTS) $(luckXXX_SUFFIX_XXX_LDADD) $(LIBS)

gmxdumpXXX_SUFFIX_XXX: $(gmxdumpXXX_SUFFIX_XXX_OBJECTS) $(gmxdumpXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f gmxdumpXXX_SUFFIX_XXX
	$(LINK) $(gmxdumpXXX_SUFFIX_XXX_LDFLAGS) $(gmxdumpXXX_SUFFIX_XXX_OBJECTS) $(gmxdumpXXX_SUFFIX_XXX_LDADD) $(LIBS)

gmxcheckXXX_SUFFIX_XXX: $(gmxcheckXXX_SUFFIX_XXX_OBJECTS) $(gmxcheckXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f gmxcheckXXX_SUFFIX_XXX
	$(LINK) $(gmxcheckXXX_SUFFIX_XXX_LDFLAGS) $(gmxcheckXXX_SUFFIX_XXX_OBJECTS) $(gmxcheckXXX_SUFFIX_XXX_LDADD) $(LIBS)

x2topXXX_SUFFIX_XXX: $(x2topXXX_SUFFIX_XXX_OBJECTS) $(x2topXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f x2topXXX_SUFFIX_XXX
	$(LINK) $(x2topXXX_SUFFIX_XXX_LDFLAGS) $(x2topXXX_SUFFIX_XXX_OBJECTS) $(x2topXXX_SUFFIX_XXX_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src/kernel

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu src/kernel/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-tags mostlyclean-depend mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-tags clean-depend \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-tags \
		distclean-depend distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir mostlyclean-depend \
distclean-depend clean-depend maintainer-clean-depend info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean

.asm.o:
	$(NASM) $(NASMFLAGS) $< -o $@
.S.s:
	$(CPP) $< > $@
.F.f:	
	$(CPP) $< > $@

install-mdrun: mdrunXXX_SUFFIX_XXX
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	if test -f mdrunXXX_SUFFIX_XXX; then \
		echo "$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mdrunXXX_SUFFIX_XXX $(DESTDIR)$(bindir)/mdrunXXX_SUFFIX_XXX"; \
	     $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mdrunXXX_SUFFIX_XXX $(DESTDIR)$(bindir)/mdrunXXX_SUFFIX_XXX; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
