# Makefile.in generated automatically by automake 1.4d from Makefile.am

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_FLAG =
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

@SET_MAKE@
host_alias = @host_alias@
host_triplet = @host@
AMDEP = @AMDEP@
AMTAR = @AMTAR@
AWK = @AWK@
AXP_ASM_OBJ = @AXP_ASM_OBJ@
BUILD_CC = @BUILD_CC@
CC = @CC@
CPP = @CPP@
DEPDIR = @DEPDIR@
F77 = @F77@
FLIBS = @FLIBS@
IDENT = @IDENT@
INNER_C_OBJ = @INNER_C_OBJ@
INNER_F77_OBJ = @INNER_F77_OBJ@
MAKEINFO = @MAKEINFO@
MOTIF_OBJ = @MOTIF_OBJ@
MPICC = @MPICC@
NASM = @NASM@
NASMFLAGS = @NASMFLAGS@
PACKAGE = @PACKAGE@
PAR_OBJ = @PAR_OBJ@
RANLIB = @RANLIB@
SSE_OBJ = @SSE_OBJ@
SUFFIX = @SUFFIX@
TDN_OBJ = @TDN_OBJ@
VERSION = @VERSION@
X86_ASM_OBJ = @X86_ASM_OBJ@
XDR_OBJ = @XDR_OBJ@
_am_include = @_am_include@
bindir = @bindir@
install_sh = @install_sh@
libdir = @libdir@

#
# Don't edit - this file is generated automatically from Makefile.am
#


#
# Don't edit - this file is generated automatically from Makefile.am
#

# The asm suffix is for intel syntax assembly, and
# the s suffix for at & t syntax.
# S suffix files will be preprocessed by cpp, nasm
# on the other hand can do this directly.


SUFFIXES = .asm .S .F

#################
# We need a second compile command producing executables 
# that can be run on the local host to make the innerloops.
# In most cases this is identical to the normal one, but not
# for cross-compilation. We also need it on parallel machines 
# where the MPI executables cannot be run outside a batch queue.

# This might be bad - but I don't know any other way to enable
# us to type make <progname> in subdirs right now
#AM_CPPFLAGS = -DHAVE_CONFIG_H

BUILD_COMPILE = $(BUILD_CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)

# This is necessary for VPATH to work, 
# but it can probably be done in a nicer way...
INCLUDES = @INCLUDES@ -I$(top_srcdir)/src/include
LDFLAGS = @LDFLAGS@ -L${top_builddir}/src/gmxlib -L${top_builddir}/src/mdlib
LDADD = -lmdXXX_SUFFIX_XXX -lgmxXXX_SUFFIX_XXX

bin_PROGRAMS = \
	gromppXXX_SUFFIX_XXX		mdrunXXX_SUFFIX_XXX		\
	tpbconvXXX_SUFFIX_XXX	  	pdb2gmxXXX_SUFFIX_XXX		\
	protonateXXX_SUFFIX_XXX		nmrunXXX_SUFFIX_XXX	  	\
	luckXXX_SUFFIX_XXX		gmxdumpXXX_SUFFIX_XXX		\
	gmxcheckXXX_SUFFIX_XXX  	x2topXXX_SUFFIX_XXX				


gromppXXX_SUFFIX_XXX_SOURCES = \
	topio.c 	toppush.c 	topcat.c 	topshake.c 	\
	convparm.c 	tomorse.c	sorting.c 	splitter.c	\
	dum_parm.c	readir.c  	add_par.c	topexcl.c	\
	toputil.c	topdirs.c	grompp.c	add_par.h	\
	splitter.h	topio.h		toputil.h	convparm.h	\
	sorting.h	topdirs.h	toppush.h	dum_parm.h	\
	readir.h	topcat.h	topexcl.h	topshake.h


mdrunXXX_SUFFIX_XXX_SOURCES = \
	mdrun.c


tpbconvXXX_SUFFIX_XXX_SOURCES = \
	readir.c	toputil.c	topdirs.c	add_par.c	\
	topexcl.c	tpbconv.c	add_par.h	toputil.h	\
	topdirs.h	readir.h	topexcl.h


pdb2gmxXXX_SUFFIX_XXX_SOURCES = \
	hizzie.c	xlate.c		specbond.c	ter_db.c	\
	h_db.c		genhydro.c     	pdb2top.c 	gen_ad.c 	\
	gen_dum.c	pgutil.c	resall.c	hackblock.c	\
	add_par.c	topexcl.c 	toputil.c	topdirs.c	\
	pdb2gmx.c	gen_ad.h	add_par.h	h_db.h		\
	pdb2top.h	resall.h	toputil.h	xlate.h		\
	gen_dum.h	hackblock.h	pgutil.h	ter_db.h	\
	topdirs.h	genhydro.h	hizzie.h	specbond.h	\
	topexcl.h


protonateXXX_SUFFIX_XXX_SOURCES = \
	hackblock.c	ter_db.c	h_db.c		genhydro.c	\
	pgutil.c	resall.c	add_par.c	topexcl.c	\
	toputil.c	topdirs.c	protonate.c	add_par.h	\
	h_db.h		resall.h	toputil.h	hackblock.h	\
	pgutil.h	ter_db.h	topdirs.h	topexcl.h


nmrunXXX_SUFFIX_XXX_SOURCES = \
	nmrun.c


luckXXX_SUFFIX_XXX_SOURCES = \
	luck.c


gmxdumpXXX_SUFFIX_XXX_SOURCES = \
	gmxdump.c


gmxcheckXXX_SUFFIX_XXX_SOURCES = \
	gmxcheck.c	tpbcmp.c	tpbcmp.h


x2topXXX_SUFFIX_XXX_SOURCES = \
	toppush.c 	nm2type.c	pdb2top.c 	gen_ad.c 	\
	gen_dum.c	pgutil.c	resall.c	hackblock.c	\
	add_par.c	topexcl.c	toputil.c	topdirs.c	\
	x2top.c		add_par.h	gen_ad.h	pdb2top.h	\
	resall.h	toputil.h	gen_dum.h	hackblock.h	\
	pgutil.h	topdirs.h	toppush.h	topexcl.h	\
	x2top.h


# clean things explicitly, since the target names might have changed

CLEANFILES = ${bin_PROGRAMS}	${EXTRA_PROGRAMS}	\
		*_mpi *_d *~ \\\#*

subdir = src/kernel
mkinstalldirs = $(SHELL) $(top_srcdir)/./config/mkinstalldirs
CONFIG_HEADER = ../../src/include/config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I../../src/include
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
am_gmxcheckXXX_SUFFIX_XXX_OBJECTS =  gmxcheck.o tpbcmp.o
gmxcheckXXX_SUFFIX_XXX_OBJECTS =  $(am_gmxcheckXXX_SUFFIX_XXX_OBJECTS)
gmxcheckXXX_SUFFIX_XXX_LDADD = $(LDADD)
gmxcheckXXX_SUFFIX_XXX_DEPENDENCIES = 
gmxcheckXXX_SUFFIX_XXX_LDFLAGS = 
am_gmxdumpXXX_SUFFIX_XXX_OBJECTS =  gmxdump.o
gmxdumpXXX_SUFFIX_XXX_OBJECTS =  $(am_gmxdumpXXX_SUFFIX_XXX_OBJECTS)
gmxdumpXXX_SUFFIX_XXX_LDADD = $(LDADD)
gmxdumpXXX_SUFFIX_XXX_DEPENDENCIES = 
gmxdumpXXX_SUFFIX_XXX_LDFLAGS = 
am_gromppXXX_SUFFIX_XXX_OBJECTS =  topio.o toppush.o topcat.o topshake.o \
convparm.o tomorse.o sorting.o splitter.o dum_parm.o readir.o add_par.o \
topexcl.o toputil.o topdirs.o grompp.o
gromppXXX_SUFFIX_XXX_OBJECTS =  $(am_gromppXXX_SUFFIX_XXX_OBJECTS)
gromppXXX_SUFFIX_XXX_LDADD = $(LDADD)
gromppXXX_SUFFIX_XXX_DEPENDENCIES = 
gromppXXX_SUFFIX_XXX_LDFLAGS = 
am_luckXXX_SUFFIX_XXX_OBJECTS =  luck.o
luckXXX_SUFFIX_XXX_OBJECTS =  $(am_luckXXX_SUFFIX_XXX_OBJECTS)
luckXXX_SUFFIX_XXX_LDADD = $(LDADD)
luckXXX_SUFFIX_XXX_DEPENDENCIES = 
luckXXX_SUFFIX_XXX_LDFLAGS = 
am_mdrunXXX_SUFFIX_XXX_OBJECTS =  mdrun.o
mdrunXXX_SUFFIX_XXX_OBJECTS =  $(am_mdrunXXX_SUFFIX_XXX_OBJECTS)
mdrunXXX_SUFFIX_XXX_LDADD = $(LDADD)
mdrunXXX_SUFFIX_XXX_DEPENDENCIES = 
mdrunXXX_SUFFIX_XXX_LDFLAGS = 
am_nmrunXXX_SUFFIX_XXX_OBJECTS =  nmrun.o
nmrunXXX_SUFFIX_XXX_OBJECTS =  $(am_nmrunXXX_SUFFIX_XXX_OBJECTS)
nmrunXXX_SUFFIX_XXX_LDADD = $(LDADD)
nmrunXXX_SUFFIX_XXX_DEPENDENCIES = 
nmrunXXX_SUFFIX_XXX_LDFLAGS = 
am_pdb2gmxXXX_SUFFIX_XXX_OBJECTS =  hizzie.o xlate.o specbond.o ter_db.o \
h_db.o genhydro.o pdb2top.o gen_ad.o gen_dum.o pgutil.o resall.o \
hackblock.o add_par.o topexcl.o toputil.o topdirs.o pdb2gmx.o
pdb2gmxXXX_SUFFIX_XXX_OBJECTS =  $(am_pdb2gmxXXX_SUFFIX_XXX_OBJECTS)
pdb2gmxXXX_SUFFIX_XXX_LDADD = $(LDADD)
pdb2gmxXXX_SUFFIX_XXX_DEPENDENCIES = 
pdb2gmxXXX_SUFFIX_XXX_LDFLAGS = 
am_protonateXXX_SUFFIX_XXX_OBJECTS =  hackblock.o ter_db.o h_db.o \
genhydro.o pgutil.o resall.o add_par.o topexcl.o toputil.o topdirs.o \
protonate.o
protonateXXX_SUFFIX_XXX_OBJECTS =  $(am_protonateXXX_SUFFIX_XXX_OBJECTS)
protonateXXX_SUFFIX_XXX_LDADD = $(LDADD)
protonateXXX_SUFFIX_XXX_DEPENDENCIES = 
protonateXXX_SUFFIX_XXX_LDFLAGS = 
am_tpbconvXXX_SUFFIX_XXX_OBJECTS =  readir.o toputil.o topdirs.o \
add_par.o topexcl.o tpbconv.o
tpbconvXXX_SUFFIX_XXX_OBJECTS =  $(am_tpbconvXXX_SUFFIX_XXX_OBJECTS)
tpbconvXXX_SUFFIX_XXX_LDADD = $(LDADD)
tpbconvXXX_SUFFIX_XXX_DEPENDENCIES = 
tpbconvXXX_SUFFIX_XXX_LDFLAGS = 
am_x2topXXX_SUFFIX_XXX_OBJECTS =  toppush.o nm2type.o pdb2top.o gen_ad.o \
gen_dum.o pgutil.o resall.o hackblock.o add_par.o topexcl.o toputil.o \
topdirs.o x2top.o
x2topXXX_SUFFIX_XXX_OBJECTS =  $(am_x2topXXX_SUFFIX_XXX_OBJECTS)
x2topXXX_SUFFIX_XXX_LDADD = $(LDADD)
x2topXXX_SUFFIX_XXX_DEPENDENCIES = 
x2topXXX_SUFFIX_XXX_LDFLAGS = 
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CFLAGS = @CFLAGS@
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES =  $(gmxcheckXXX_SUFFIX_XXX_SOURCES) \
$(gmxdumpXXX_SUFFIX_XXX_SOURCES) $(gromppXXX_SUFFIX_XXX_SOURCES) \
$(luckXXX_SUFFIX_XXX_SOURCES) $(mdrunXXX_SUFFIX_XXX_SOURCES) \
$(nmrunXXX_SUFFIX_XXX_SOURCES) $(pdb2gmxXXX_SUFFIX_XXX_SOURCES) \
$(protonateXXX_SUFFIX_XXX_SOURCES) $(tpbconvXXX_SUFFIX_XXX_SOURCES) \
$(x2topXXX_SUFFIX_XXX_SOURCES)
depcomp = $(SHELL) $(top_srcdir)/./config/depcomp
@AMDEP@DEP_FILES =  $(DEPDIR)/add_par.Po $(DEPDIR)/convparm.Po \
@AMDEP@$(DEPDIR)/dum_parm.Po $(DEPDIR)/gen_ad.Po $(DEPDIR)/gen_dum.Po \
@AMDEP@$(DEPDIR)/genhydro.Po $(DEPDIR)/gmxcheck.Po $(DEPDIR)/gmxdump.Po \
@AMDEP@$(DEPDIR)/grompp.Po $(DEPDIR)/h_db.Po $(DEPDIR)/hackblock.Po \
@AMDEP@$(DEPDIR)/hizzie.Po $(DEPDIR)/luck.Po $(DEPDIR)/mdrun.Po \
@AMDEP@$(DEPDIR)/nm2type.Po $(DEPDIR)/nmrun.Po $(DEPDIR)/pdb2gmx.Po \
@AMDEP@$(DEPDIR)/pdb2top.Po $(DEPDIR)/pgutil.Po $(DEPDIR)/protonate.Po \
@AMDEP@$(DEPDIR)/readir.Po $(DEPDIR)/resall.Po $(DEPDIR)/sorting.Po \
@AMDEP@$(DEPDIR)/specbond.Po $(DEPDIR)/splitter.Po $(DEPDIR)/ter_db.Po \
@AMDEP@$(DEPDIR)/tomorse.Po $(DEPDIR)/topcat.Po $(DEPDIR)/topdirs.Po \
@AMDEP@$(DEPDIR)/topexcl.Po $(DEPDIR)/topio.Po $(DEPDIR)/toppush.Po \
@AMDEP@$(DEPDIR)/topshake.Po $(DEPDIR)/toputil.Po $(DEPDIR)/tpbcmp.Po \
@AMDEP@$(DEPDIR)/tpbconv.Po $(DEPDIR)/x2top.Po $(DEPDIR)/xlate.Po
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

GZIP_ENV = --best
SOURCES = $(gmxcheckXXX_SUFFIX_XXX_SOURCES) $(gmxdumpXXX_SUFFIX_XXX_SOURCES) $(gromppXXX_SUFFIX_XXX_SOURCES) $(luckXXX_SUFFIX_XXX_SOURCES) $(mdrunXXX_SUFFIX_XXX_SOURCES) $(nmrunXXX_SUFFIX_XXX_SOURCES) $(pdb2gmxXXX_SUFFIX_XXX_SOURCES) $(protonateXXX_SUFFIX_XXX_SOURCES) $(tpbconvXXX_SUFFIX_XXX_SOURCES) $(x2topXXX_SUFFIX_XXX_SOURCES)
OBJECTS = $(am_gmxcheckXXX_SUFFIX_XXX_OBJECTS) $(am_gmxdumpXXX_SUFFIX_XXX_OBJECTS) $(am_gromppXXX_SUFFIX_XXX_OBJECTS) $(am_luckXXX_SUFFIX_XXX_OBJECTS) $(am_mdrunXXX_SUFFIX_XXX_OBJECTS) $(am_nmrunXXX_SUFFIX_XXX_OBJECTS) $(am_pdb2gmxXXX_SUFFIX_XXX_OBJECTS) $(am_protonateXXX_SUFFIX_XXX_OBJECTS) $(am_tpbconvXXX_SUFFIX_XXX_OBJECTS) $(am_x2topXXX_SUFFIX_XXX_OBJECTS)

all: all-am
.SUFFIXES:
.SUFFIXES: .asm .S .F .c .h .o
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(srcdir)/../Makefile.inc
	cd $(top_srcdir) && $(AUTOMAKE) --gnu src/kernel/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= CONFIG_LINKS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p|sed -e 's/$(EXEEXT)$$//' -e '$(transform)' -e 's/$$/$(EXEEXT)/'`"; \
	    echo "  $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/$$f"; \
	     $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f="`echo $$p|sed -e 's/$(EXEEXT)$$//' -e '$(transform)' -e 's/$$/$(EXEEXT)/'`"; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

mostlyclean-compile:
	-rm -f *.o core *.core

distclean-compile:
	-rm -f *.tab.c

gmxcheckXXX_SUFFIX_XXX: $(gmxcheckXXX_SUFFIX_XXX_OBJECTS) $(gmxcheckXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f gmxcheckXXX_SUFFIX_XXX
	$(LINK) $(gmxcheckXXX_SUFFIX_XXX_LDFLAGS) $(gmxcheckXXX_SUFFIX_XXX_OBJECTS) $(gmxcheckXXX_SUFFIX_XXX_LDADD) $(LIBS)

gmxdumpXXX_SUFFIX_XXX: $(gmxdumpXXX_SUFFIX_XXX_OBJECTS) $(gmxdumpXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f gmxdumpXXX_SUFFIX_XXX
	$(LINK) $(gmxdumpXXX_SUFFIX_XXX_LDFLAGS) $(gmxdumpXXX_SUFFIX_XXX_OBJECTS) $(gmxdumpXXX_SUFFIX_XXX_LDADD) $(LIBS)

gromppXXX_SUFFIX_XXX: $(gromppXXX_SUFFIX_XXX_OBJECTS) $(gromppXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f gromppXXX_SUFFIX_XXX
	$(LINK) $(gromppXXX_SUFFIX_XXX_LDFLAGS) $(gromppXXX_SUFFIX_XXX_OBJECTS) $(gromppXXX_SUFFIX_XXX_LDADD) $(LIBS)

luckXXX_SUFFIX_XXX: $(luckXXX_SUFFIX_XXX_OBJECTS) $(luckXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f luckXXX_SUFFIX_XXX
	$(LINK) $(luckXXX_SUFFIX_XXX_LDFLAGS) $(luckXXX_SUFFIX_XXX_OBJECTS) $(luckXXX_SUFFIX_XXX_LDADD) $(LIBS)

mdrunXXX_SUFFIX_XXX: $(mdrunXXX_SUFFIX_XXX_OBJECTS) $(mdrunXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f mdrunXXX_SUFFIX_XXX
	$(LINK) $(mdrunXXX_SUFFIX_XXX_LDFLAGS) $(mdrunXXX_SUFFIX_XXX_OBJECTS) $(mdrunXXX_SUFFIX_XXX_LDADD) $(LIBS)

nmrunXXX_SUFFIX_XXX: $(nmrunXXX_SUFFIX_XXX_OBJECTS) $(nmrunXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f nmrunXXX_SUFFIX_XXX
	$(LINK) $(nmrunXXX_SUFFIX_XXX_LDFLAGS) $(nmrunXXX_SUFFIX_XXX_OBJECTS) $(nmrunXXX_SUFFIX_XXX_LDADD) $(LIBS)

pdb2gmxXXX_SUFFIX_XXX: $(pdb2gmxXXX_SUFFIX_XXX_OBJECTS) $(pdb2gmxXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f pdb2gmxXXX_SUFFIX_XXX
	$(LINK) $(pdb2gmxXXX_SUFFIX_XXX_LDFLAGS) $(pdb2gmxXXX_SUFFIX_XXX_OBJECTS) $(pdb2gmxXXX_SUFFIX_XXX_LDADD) $(LIBS)

protonateXXX_SUFFIX_XXX: $(protonateXXX_SUFFIX_XXX_OBJECTS) $(protonateXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f protonateXXX_SUFFIX_XXX
	$(LINK) $(protonateXXX_SUFFIX_XXX_LDFLAGS) $(protonateXXX_SUFFIX_XXX_OBJECTS) $(protonateXXX_SUFFIX_XXX_LDADD) $(LIBS)

tpbconvXXX_SUFFIX_XXX: $(tpbconvXXX_SUFFIX_XXX_OBJECTS) $(tpbconvXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f tpbconvXXX_SUFFIX_XXX
	$(LINK) $(tpbconvXXX_SUFFIX_XXX_LDFLAGS) $(tpbconvXXX_SUFFIX_XXX_OBJECTS) $(tpbconvXXX_SUFFIX_XXX_LDADD) $(LIBS)

x2topXXX_SUFFIX_XXX: $(x2topXXX_SUFFIX_XXX_OBJECTS) $(x2topXXX_SUFFIX_XXX_DEPENDENCIES)
	@rm -f x2topXXX_SUFFIX_XXX
	$(LINK) $(x2topXXX_SUFFIX_XXX_LDFLAGS) $(x2topXXX_SUFFIX_XXX_OBJECTS) $(x2topXXX_SUFFIX_XXX_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS: $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $$here

distclean-tags:
	-rm -f TAGS ID

@AMDEP@@_am_include@ $(DEPDIR)/add_par.Po
@AMDEP@@_am_include@ $(DEPDIR)/convparm.Po
@AMDEP@@_am_include@ $(DEPDIR)/dum_parm.Po
@AMDEP@@_am_include@ $(DEPDIR)/gen_ad.Po
@AMDEP@@_am_include@ $(DEPDIR)/gen_dum.Po
@AMDEP@@_am_include@ $(DEPDIR)/genhydro.Po
@AMDEP@@_am_include@ $(DEPDIR)/gmxcheck.Po
@AMDEP@@_am_include@ $(DEPDIR)/gmxdump.Po
@AMDEP@@_am_include@ $(DEPDIR)/grompp.Po
@AMDEP@@_am_include@ $(DEPDIR)/h_db.Po
@AMDEP@@_am_include@ $(DEPDIR)/hackblock.Po
@AMDEP@@_am_include@ $(DEPDIR)/hizzie.Po
@AMDEP@@_am_include@ $(DEPDIR)/luck.Po
@AMDEP@@_am_include@ $(DEPDIR)/mdrun.Po
@AMDEP@@_am_include@ $(DEPDIR)/nm2type.Po
@AMDEP@@_am_include@ $(DEPDIR)/nmrun.Po
@AMDEP@@_am_include@ $(DEPDIR)/pdb2gmx.Po
@AMDEP@@_am_include@ $(DEPDIR)/pdb2top.Po
@AMDEP@@_am_include@ $(DEPDIR)/pgutil.Po
@AMDEP@@_am_include@ $(DEPDIR)/protonate.Po
@AMDEP@@_am_include@ $(DEPDIR)/readir.Po
@AMDEP@@_am_include@ $(DEPDIR)/resall.Po
@AMDEP@@_am_include@ $(DEPDIR)/sorting.Po
@AMDEP@@_am_include@ $(DEPDIR)/specbond.Po
@AMDEP@@_am_include@ $(DEPDIR)/splitter.Po
@AMDEP@@_am_include@ $(DEPDIR)/ter_db.Po
@AMDEP@@_am_include@ $(DEPDIR)/tomorse.Po
@AMDEP@@_am_include@ $(DEPDIR)/topcat.Po
@AMDEP@@_am_include@ $(DEPDIR)/topdirs.Po
@AMDEP@@_am_include@ $(DEPDIR)/topexcl.Po
@AMDEP@@_am_include@ $(DEPDIR)/topio.Po
@AMDEP@@_am_include@ $(DEPDIR)/toppush.Po
@AMDEP@@_am_include@ $(DEPDIR)/topshake.Po
@AMDEP@@_am_include@ $(DEPDIR)/toputil.Po
@AMDEP@@_am_include@ $(DEPDIR)/tpbcmp.Po
@AMDEP@@_am_include@ $(DEPDIR)/tpbconv.Po
@AMDEP@@_am_include@ $(DEPDIR)/x2top.Po
@AMDEP@@_am_include@ $(DEPDIR)/xlate.Po

distclean-depend:
	-rm -rf $(DEPDIR)

@AMDEP@CCDEPMODE = @CCDEPMODE@

.c.o:
@AMDEP@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<


distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)


distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f Makefile.in
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-binPROGRAMS distclean-compile \
	distclean-depend distclean-generic distclean-tags

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-binPROGRAMS \
	maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-binPROGRAMS mostlyclean-compile \
	mostlyclean-generic

.PHONY: check check-am clean clean-binPROGRAMS clean-generic distclean \
	distclean-binPROGRAMS distclean-compile distclean-depend \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-binPROGRAMS maintainer-clean-generic \
	mostlyclean mostlyclean-binPROGRAMS mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-binPROGRAMS

.asm.o:
	$(NASM) $(NASMFLAGS) $< -o $@
.S.s:
	$(CPP) $< > $@
.F.f:	
	$(CPP) $< > $@

install-mdrun: mdrunXXX_SUFFIX_XXX
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	if test -f mdrunXXX_SUFFIX_XXX; then \
		echo "$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mdrunXXX_SUFFIX_XXX $(DESTDIR)$(bindir)/mdrunXXX_SUFFIX_XXX"; \
	     $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mdrunXXX_SUFFIX_XXX $(DESTDIR)$(bindir)/mdrunXXX_SUFFIX_XXX; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
